version: '3.8'

services:
  # Cloudflare Tunnel Service
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - ../../../infrastructure/cloudflare/config.yml:/etc/cloudflared/config.yml:ro
      - ../../../infrastructure/cloudflare/tunnel-credentials.json:/etc/cloudflared/tunnel-credentials.json:ro
      - ./logs/cloudflared:/var/log/cloudflared
    networks:
      - sso-network
    restart: unless-stopped
    depends_on:
      - central-sso
      - tenant1-app
      - tenant2-app
    environment:
      - TUNNEL_METRICS=0.0.0.0:9090
      - TUNNEL_LOGFILE=/var/log/cloudflared/cloudflared.log
    ports:
      - "9090:9090"  # Metrics endpoint for monitoring
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/metrics || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Central SSO with Cloudflare production configuration
  central-sso:
    environment:
      # Production environment settings
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://sso.poc.hi-dil.com
      - ASSET_URL=https://sso.poc.hi-dil.com
      
      # Session and security configuration
      - SESSION_DOMAIN=.poc.hi-dil.com
      - SESSION_SECURE_COOKIE=true
      - SESSION_SAME_SITE=lax
      
      # CORS configuration for cross-domain access
      - CORS_ALLOWED_ORIGINS=https://sso.poc.hi-dil.com,https://tenant-one.poc.hi-dil.com,https://tenant-two.poc.hi-dil.com
      - CORS_ALLOWED_HEADERS=accept,authorization,content-type,x-xsrf-token,x-csrf-token,x-requested-with
      
      # Sanctum configuration for API authentication
      - SANCTUM_STATEFUL_DOMAINS=sso.poc.hi-dil.com,tenant-one.poc.hi-dil.com,tenant-two.poc.hi-dil.com
      
      # Trust proxy headers from Cloudflare
      - TRUSTED_PROXIES=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      
      # Security headers
      - SECURE_HEADERS=true
      - HSTS_MAX_AGE=31536000
      
      # Logging configuration
      - LOG_LEVEL=warning
      - LOG_STDERR_FORMATTER=Monolog\Formatter\JsonFormatter

  # Tenant 1 Application with Cloudflare production configuration
  tenant1-app:
    environment:
      # Production environment settings
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://tenant-one.poc.hi-dil.com
      - ASSET_URL=https://tenant-one.poc.hi-dil.com
      
      # SSO configuration
      - CENTRAL_SSO_URL=https://sso.poc.hi-dil.com
      - CENTRAL_SSO_API=http://central-sso:8000/api
      - TENANT_SLUG=tenant1
      
      # Session and security configuration
      - SESSION_DOMAIN=.poc.hi-dil.com
      - SESSION_SECURE_COOKIE=true
      - SESSION_SAME_SITE=lax
      
      # CORS configuration
      - CORS_ALLOWED_ORIGINS=https://sso.poc.hi-dil.com,https://tenant-one.poc.hi-dil.com
      
      # Trust proxy headers from Cloudflare
      - TRUSTED_PROXIES=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      
      # Security configuration
      - SECURE_HEADERS=true
      - HSTS_MAX_AGE=31536000
      
      # Logging
      - LOG_LEVEL=warning

  # Tenant 2 Application with Cloudflare production configuration
  tenant2-app:
    environment:
      # Production environment settings
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://tenant-two.poc.hi-dil.com
      - ASSET_URL=https://tenant-two.poc.hi-dil.com
      
      # SSO configuration
      - CENTRAL_SSO_URL=https://sso.poc.hi-dil.com
      - CENTRAL_SSO_API=http://central-sso:8000/api
      - TENANT_SLUG=tenant2
      
      # Session and security configuration
      - SESSION_DOMAIN=.poc.hi-dil.com
      - SESSION_SECURE_COOKIE=true
      - SESSION_SAME_SITE=lax
      
      # CORS configuration
      - CORS_ALLOWED_ORIGINS=https://sso.poc.hi-dil.com,https://tenant-two.poc.hi-dil.com
      
      # Trust proxy headers from Cloudflare
      - TRUSTED_PROXIES=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      
      # Security configuration
      - SECURE_HEADERS=true
      - HSTS_MAX_AGE=31536000
      
      # Logging
      - LOG_LEVEL=warning

  # MariaDB with optimized production settings
  mariadb:
    environment:
      # Optimized settings for production
      - MYSQL_INNODB_BUFFER_POOL_SIZE=2G
      - MYSQL_INNODB_LOG_FILE_SIZE=256M
      - MYSQL_MAX_CONNECTIONS=200
      - MYSQL_QUERY_CACHE_SIZE=128M
    volumes:
      # Add backup volume
      - ./backups/mysql:/backups
    command: >
      --innodb-buffer-pool-size=2G
      --innodb-log-file-size=256M
      --max-connections=200
      --query-cache-size=128M
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
      --log-queries-not-using-indexes=1

  # Optional: Redis for session and cache storage
  redis:
    image: redis:7-alpine
    container_name: sso-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - sso-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure_redis_password}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Log aggregation with Fluentd
  fluentd:
    image: fluent/fluentd:v1.16-debian
    container_name: sso-fluentd
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - ./logs:/var/log/containers:ro
    networks:
      - sso-network
    restart: unless-stopped
    depends_on:
      - central-sso
      - tenant1-app
      - tenant2-app
      - cloudflared

volumes:
  redis_data:
    driver: local
  
# Note: The sso-network is defined in the main docker-compose.yml
# Ensure it exists before running this compose file
networks:
  sso-network:
    external: true
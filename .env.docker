# =============================================================================
# Docker Compose Environment Configuration for SSO POC
# =============================================================================
# This file contains variables specifically for Docker Compose deployment
# Copy this to .env and modify values as needed for your environment

# =============================================================================
# GLOBAL APPLICATION SETTINGS
# =============================================================================
APP_ENV=local
APP_DEBUG=true
LOG_LEVEL=debug
BCRYPT_ROUNDS=12

# =============================================================================
# CONTAINER CONFIGURATION
# =============================================================================
# Container Names
CENTRAL_SSO_CONTAINER=central-sso
TENANT1_CONTAINER=tenant1-app
TENANT2_CONTAINER=tenant2-app
MARIADB_CONTAINER=sso-mariadb

# Port Mappings
CENTRAL_SSO_PORT=8000
TENANT1_PORT=8001
TENANT2_PORT=8002
MARIADB_EXTERNAL_PORT=3307

# =============================================================================
# APPLICATION-SPECIFIC SETTINGS
# =============================================================================
# Central SSO Application
CENTRAL_SSO_APP_NAME="Central SSO"
CENTRAL_SSO_APP_URL=http://localhost:8000
CENTRAL_SSO_APP_KEY=base64:FmhWkTVoDR3t2v05Xkcif7M4ODUrgqRlbdbUEVBS9XU=

# Tenant 1 Application
TENANT1_APP_NAME="Tenant 1 Application"
TENANT1_APP_URL=http://localhost:8001
TENANT1_APP_KEY=base64:HqiigYO+Xlti2S2EsiyLvWUULEoQtM5ss5d8EUe5rdA=

# Tenant 2 Application
TENANT2_APP_NAME="Tenant 2 Application"
TENANT2_APP_URL=http://localhost:8002
TENANT2_APP_KEY=base64:QLs20sZ3pWZOPf9ZpIFTmINE8ZD7VxgJ/DVO9CTjRIs=

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MariaDB Version
MARIADB_VERSION=10.9

# Database Connection
DB_CONNECTION=mysql
DB_HOST=mariadb
DB_PORT=3306

# Database Credentials
DB_USERNAME=sso_user
DB_PASSWORD=sso_password
MYSQL_ROOT_PASSWORD=root_password

# Database Names
CENTRAL_SSO_DB_DATABASE=sso_main
TENANT1_DB_DATABASE=tenant1_db
TENANT2_DB_DATABASE=tenant2_db

# =============================================================================
# SESSION CONFIGURATION
# =============================================================================
SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=localhost
SESSION_SECURE_COOKIE=false
SESSION_SAME_SITE=lax

# Service-specific session cookies
CENTRAL_SSO_SESSION_COOKIE=central_sso_session
TENANT1_SESSION_COOKIE=tenant1_session
TENANT2_SESSION_COOKIE=tenant2_session

# =============================================================================
# HTTPS AND SSL CONFIGURATION
# =============================================================================
# Trusted Proxies for HTTPS detection (Cloudflare IPs or '*' for development)
TRUSTED_PROXIES=*

# HTTPS Session Configuration (for production deployment behind Cloudflare)
# Uncomment and modify these for HTTPS/production deployment:
# SESSION_SECURE_COOKIE=true
# SESSION_DOMAIN=.poc.hi-dil.com
# SESSION_SAME_SITE=lax

# Force HTTPS URLs in production
# FORCE_HTTPS=true
# APP_ENV=production
# APP_DEBUG=false
# CENTRAL_SSO_APP_URL=https://sso.poc.hi-dil.com
# TENANT1_APP_URL=https://tenant-one.poc.hi-dil.com
# TENANT2_APP_URL=https://tenant-two.poc.hi-dil.com

# Cloudflare SSL Configuration
# CLOUDFLARE_SSL_MODE=full
# CORS_ALLOWED_ORIGINS=https://sso.poc.hi-dil.com,https://tenant-one.poc.hi-dil.com,https://tenant-two.poc.hi-dil.com

# =============================================================================
# SSO INTEGRATION CONFIGURATION
# =============================================================================
# SSO URLs
CENTRAL_SSO_URL=http://localhost:8000
CENTRAL_SSO_INTERNAL_URL=http://central-sso:8000
CENTRAL_SSO_API=http://central-sso:8000/api

# Tenant Configuration
TENANT1_SLUG=tenant1
TENANT2_SLUG=tenant2

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Configuration
JWT_SECRET=U6HY6rcTfmpHNYeCH83Y1GL9aoRzp4rwFWp7RMhAf5vYDjrjy58sVX9QyliHdT4y
JWT_TTL=60

# API Keys (32+ character strings)
TENANT1_API_KEY=tenant1_0059abacdb1bd536fd605b520902f89658672011
TENANT2_API_KEY=tenant2_0010258f78e44ca7ad9de92a1a1c9307b278bbd7
MASTER_API_KEY=master_2d4fa1cb08b5b90762191f259a596ca59bbfe40382e1da9c

# HMAC Request Signing
HMAC_SECRET=your_generated_hmac_secret_here
HMAC_ALGORITHM=sha256
VERIFY_REQUEST_SIGNATURES=true
REQUEST_TIMEOUT_MINUTES=5

# Rate Limiting
RATE_LIMIT_API=60
RATE_LIMIT_AUTH=10
RATE_LIMIT_AUDIT=100

# =============================================================================
# CACHE AND QUEUE CONFIGURATION
# =============================================================================
CACHE_STORE=database
QUEUE_CONNECTION=database
BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local

# Redis Configuration (optional)
REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

# =============================================================================
# MAIL CONFIGURATION
# =============================================================================
MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="SSO System"

# =============================================================================
# LARAVEL FRAMEWORK SETTINGS
# =============================================================================
APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US
APP_MAINTENANCE_DRIVER=file
PHP_CLI_SERVER_WORKERS=4

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# Laravel Telescope (set to false in production)
TELESCOPE_ENABLED=true
TELESCOPE_PATH=telescope

# =============================================================================
# VOLUME CONFIGURATION
# =============================================================================
MARIADB_DATA_VOLUME=mariadb_data

# =============================================================================
# AWS CONFIGURATION (Optional)
# =============================================================================
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

# =============================================================================
# VITE CONFIGURATION
# =============================================================================
VITE_CENTRAL_SSO_APP_NAME="${CENTRAL_SSO_APP_NAME}"
VITE_TENANT1_APP_NAME="${TENANT1_APP_NAME}"
VITE_TENANT2_APP_NAME="${TENANT2_APP_NAME}"

# =============================================================================
# MEMCACHED CONFIGURATION
# =============================================================================
MEMCACHED_HOST=127.0.0.1

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================
# Uncomment and modify these for production deployment

# APP_ENV=production
# APP_DEBUG=false
# SESSION_SECURE_COOKIE=true
# LOG_LEVEL=error

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Generate unique APP_KEY for each service: php artisan key:generate
# 2. Generate JWT_SECRET: openssl rand -base64 32
# 3. Generate secure passwords: openssl rand -base64 32
# 4. Generate HMAC secrets: openssl rand -base64 64
# 5. Never commit .env files to version control
# 6. Use different secrets for each environment
# 7. Rotate secrets regularly in production
# 8. Use environment-specific values for each deployment
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secure-tenant-app
    ports:
      - "${APP_PORT:-8003}:8000"
    volumes:
      - .:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_URL=${APP_URL:-http://localhost:8003}
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE:-tenant_app}
      - DB_USERNAME=${DB_USERNAME:-tenant_user}
      - DB_PASSWORD=${DB_PASSWORD:-tenant_password}
      - REDIS_HOST=redis
      - CENTRAL_SSO_URL=${CENTRAL_SSO_URL:-http://central-sso:8000}
      - TENANT_SLUG=${TENANT_SLUG:-secure-tenant}
    depends_on:
      - db
      - redis
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mariadb:10.6
    container_name: secure-tenant-db
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MARIADB_DATABASE: ${DB_DATABASE:-tenant_app}
      MARIADB_USER: ${DB_USERNAME:-tenant_user}
      MARIADB_PASSWORD: ${DB_PASSWORD:-tenant_password}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${DB_PORT:-3307}:3306"
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: secure-tenant-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6380}:6379"
    networks:
      - app-network
    restart: unless-stopped

  # Optional: Nginx for production
  nginx:
    image: nginx:alpine
    container_name: secure-tenant-nginx
    ports:
      - "${NGINX_PORT:-8080}:80"
      - "${NGINX_SSL_PORT:-8443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./public:/var/www/html/public:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16